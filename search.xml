<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[VSCode中python代码输出中文乱码解决方法]]></title>
    <url>%2Fposts%2F87ed0839.html</url>
    <content type="text"><![CDATA[在 vscode 中编写 python 代码，输出中文时，控制台输出为乱码解决方法：先检查右下角编码集设置是否正确修改完后运行仍不行，可以在”文件”－”首选项”－”用户设置”中搜索 code-runner.executorMap 选项，提示需要在 setting.json 中修改在 json 中添加下列属性123"code-runner.executorMap": &#123;"python": "set PYTHONIOENCODING=utf8 &amp;&amp; python -u"&#125;https://mp.weixin.qq.com/s/QIJ-QHkxZUyKyQAPG49vPg]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用hexo下next主题时一些配置]]></title>
    <url>%2Fposts%2F2b624375.html</url>
    <content type="text"><![CDATA[前言在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件。网站脚注12345678910111213141516171819202122footer: #建站时间 since: 2018 #作者头像并且是动画效果 icon: name: user animated: true color: "##66CDAA" #显示版权作者 copyright: aigisss 爱即是诗 #不显示Hexo powered: enable: false version: false #不显示主题和版本 theme: enable: false version: false #显示备案号 beian: enable: true icp: 赣ICP备18013338-1号版权声明1234creative_commons: license: by-nc-sa sidebar: false post: true代码块123456789codeblock: # 自定义边框半径，默认是1 # 值越大弧度越大 border_radius: 6 # 右上角显示复制按钮 copy_button: enable: true # 显示复制结果 show_result: true分享123456789101112131415161718needmoreshare2: enable: true postbottom: #文章底部 enable: false options: iconStyle: box boxForm: horizontal position: bottomCenter networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook #左下角悬浮按钮 float: enable: true options: iconStyle: box boxForm: horizontal position: middleRight networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook访问次数123456789101112# busuanzi统计busuanzi_count: enable: true # 总访客数 total_visitors: true total_visitors_icon: user # 总浏览量 total_views: true total_views_icon: eye # 文章浏览量 post_views: true post_views_icon: eye顶部阅读进度条1234reading_progress: enable: true color: "#37c6c0" height: 2px加载动画123456789101112131415161718192021222324motion: # 启用 enable: true # 异步加载 async: true transition: # Transition variants: # fadeIn | fadeOut | flipXIn | flipXOut | flipYIn | flipYOut | flipBounceXIn | flipBounceXOut | flipBounceYIn | flipBounceYOut # swoopIn | swoopOut | whirlIn | whirlOut | shrinkIn | shrinkOut | expandIn | expandOut # bounceIn | bounceOut | bounceUpIn | bounceUpOut | bounceDownIn | bounceDownOut | bounceLeftIn | bounceLeftOut | bounceRightIn | bounceRightOut # slideUpIn | slideUpOut | slideDownIn | slideDownOut | slideLeftIn | slideLeftOut | slideRightIn | slideRightOut # slideUpBigIn | slideUpBigOut | slideDownBigIn | slideDownBigOut | slideLeftBigIn | slideLeftBigOut | slideRightBigIn | slideRightBigOut # perspectiveUpIn | perspectiveUpOut | perspectiveDownIn | perspectiveDownOut | perspectiveLeftIn | perspectiveLeftOut | perspectiveRightIn | perspectiveRightOut # 文章摘要动画 post_block: bounceIn # 加载各种页面动画（分类，关于，标签等等） post_header: fadeIn # 文章详情动画 post_body: fadeIn # coll_header: fadeIn # Only for Pisces | Gemini. # 侧边栏（人物头像的那部分） sidebar: fadeIn搜索功能NexT自带提供了两个搜索algolia_searchlocal_search其实这个local_search已经很好用了，配置algolia_search挺麻烦的，而且搜索功能也用的不多毕竟有万能的Ctrl + F123456789local_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 # unescape html strings to the readable one unescape: false添加 RSS 订阅12345678910npm install hexo-generator-feed --save复制代码# Extensionsplugins: hexo-generate-feedfeed: # RSS订阅插件 type: atom path: atom.xml limit: 0 #0就是代表所有数学公式1234567891011# Math Equations Render Supportmath: enable: true # Default(true) will load mathjax/katex script on demand # That is it only render those page who has 'mathjax: true' in Front Matter. # If you set it to false, it will load mathjax/katex srcipt EVERY PAGE. per_page: true engine: mathjax #engine: katex还需要在文章的 Front-matter 里打开 mathjax 开关，比如：12345title: 使用hexo下next主题搭建博客的记录tags: 日常abbrlink: 326cb881date: 2019-09-09 09:58:21mathjax: true网上一大堆说会出现语义冲突—–类 Latex 格式书写的数学公式下划线_表示下标，有特殊的含义，如果被强制转换为&lt;em&gt;标签，那么 MathJax 引擎在渲染数学公式的时候就会出错。类似的语义冲突的符号还包括*, {, }, \\等。但是！！在我试验下没有出现此类问题，只要在主题中打开，md 中申明 mathjax: true 就好了，可能在我使用的next6.7中解决了冲突。比如以下的公式能出来！1\Gamma(z) = \int_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\,.$$\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt,.$$12345678$$P = \frac&#123;\sum_&#123;i=1&#125;^n (x_i- x)(y_i- y)&#125;&#123;\displaystyle \left[\sum_&#123;i=1&#125;^n (x_i-x)^2\sum_&#123;i=1&#125;^n (y_i-y)^2\right]^&#123;1/2&#125; &#125;$$$$P = \frac{\sum_{i=1}^n (x_i- x)(y_i- y)}{\displaystyle \left[\sum_{i=1}^n (x_i-x)^2\sum_{i=1}^n (y_i-y)^2\right]^{1/2} }$$]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用hexo下next主题时出错]]></title>
    <url>%2Fposts%2F326cb881.html</url>
    <content type="text"><![CDATA[next6.3+自带代码复制，使用代码高亮插件时 hexo-prism-plugin 时会不起作用在主题下的_config.yml文件中设置：使用了 hexo-asset-image 和 hexo-abbrlink 后，图片显示不出来。issue：https://github.com/rozbo/hexo-abbrlink/issues/19解决方法：https://github.com/foreveryang321/hexo-asset-image]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Hexo + NexT 快速搭建博客]]></title>
    <url>%2Fposts%2Feba3f111.html</url>
    <content type="text"><![CDATA[安装 Hexo安装 node.js如果你已经安装了 node.js，请忽略。访问node.js 官网，根据指引进行安装。安装 Git如果你已经安装了 Git，请忽略。访问Git 官网，根据指引进行安装。由于众所周知的原因，Windows 从上面的链接下载 git for windows 最好挂上一个代理，否则下载速度十分缓慢。也可以参考这个页面，收录了存储于百度云的下载地址。安装 Hexo国内的朋友，因为众所周知的原因，从 npm 直接安装 hexo 会非常慢，所以你需要用到镜像源，参考上面的步骤，使用 cnpm 命令行工具代替默认的 npm: 在 windows 控制台（cmd）里输入并执行npm install -g cnpm --registry=https://registry.npm.taobao.org，然后安装 hexo: cnpm install -g hexo-cli国外的朋友，请直接打开 windows 控制台，输入npm install -g hexo-cli并执行。建站建立本地博客文件夹在命令行执行如下命令，其中&lt;folder&gt;为文件夹路径12hexo init &lt;folder&gt;cd &lt;folder&gt;所有有关hexo的命令 均要在&lt;folder&gt;路径下执行。建立好后文件夹目录如下123456789.├── _config.yml├── package.json├── .gitignore├── node_modules├── scaffolds├── source| ├── _posts└── themes其中_config.yml：站点的配置文件，可以在此配置大部分的参数。package.json：应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。123456789101112131415161718&#123;"name": "hexo-site","version": "0.0.0","private": true,"hexo": &#123;"version": "3.9.0"&#125;,"dependencies": &#123;"version": "3.9.0""hexo-generator-archive": "^0.1.5","hexo-generator-category": "^0.1.3","hexo-generator-index": "^0.2.1","hexo-generator-tag": "^0.2.0","hexo-renderer-ejs": "^0.3.1","hexo-renderer-stylus": "^0.3.3","hexo-renderer-marked": "^1.0.1","hexo-server": "^0.3.3"&#125;scaffolds：模板文件夹，当您新建文章时，Hexo 会根据 scaffold 来建立文件。source：资源文件夹，存放用户资源的地方。除_posts文件夹之外，开头命名为 _ (下划线)的文件/文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。themes：主题文件夹。Hexo 会根据主题来生成静态页面。node_modules：node.js 模块，一些 插件 和 依赖 会被安装到这里。更加详细的解释请参考hexo 官方文档安装 NexT 主题进入本地博客文件夹并将 NexT 主题clone至themes文件夹下1git clone https://github.com/theme-next/hexo-theme-next themes/next你会看到，在next下也有一个_config.yml的文件，这是 NexT 主题的配置文件，为了区别它和 博客配置文件，下面会用带路径的文件名来描述它们：&lt;folder&gt;/_config.yml：站点配置文件next/_config.yml：主题配置文件启用 NexT 主题在&lt;folder&gt;/_config.yml里theme:选项填next，=&gt;theme: next，注意冒号后空一格。到这里，建站的任务就完成了。你现在可以打开控制台，输入并执行如下命令：1hexo g完成没有报错之后执行如下命令：1hexo s其中hexo g：新建public文件夹，并在其中生成网站静态文件（html，css，等文件）hexo s：启动 hexo 服务器，默认情况下，访问网址为：http://localhost:4000/更多有关 hexo 的命令，请参考hexo 官方文档的命令部分。你最后会看到控制台有如下输出：1INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.在浏览器地址栏输入http://localhost:4000/并访问，你应该会看到如下页面：&nbsp;恭喜你！你已经完成了博客搭建的主要工作！接下来就是细节的配置了。请耐心阅读以下内容。使用hexo下next主题时一些配置]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git的操作记录]]></title>
    <url>%2Fposts%2Fd5d49586.html</url>
    <content type="text"><![CDATA[与服务器上的代码产生冲突如果系统中有一些配置文件在服务器上做了配置修改,然后后续开发又新添加一些配置项的时候，在发布这个配置文件的时候,会发生代码冲突:error: Your local changes to the following files would be overwritten by merge:protected/config/main.phpPlease, commit your changes or stash them before you can merge.如果希望保留生产服务器上所做的改动,仅仅并入新配置项, 处理方法如下:123git stashgit pullgit stash pop然后可以使用 git diff -w +文件名来确认代码自动合并的情况.反过来,如果希望用代码库中的文件完全覆盖本地工作版本. 方法如下:12git reset --hardgit pull其中 git reset 是针对版本,如果想针对文件回退本地修改,使用1git checkout HEAD file/to/restore辛辛苦苦加班一星期敲的代码没了过程是这样的，在终端输入 git log，列出所有的 commit 信息，如下图：commit 的信息很简单，就是做了 6 个功能，每个功能对应一个 commit 的提交，分别是 feature-1 到 feature-6。接下来执行了强制回滚，如下：1git reset --hard 2216d4e回滚到了 feature-1 上，并且回滚的时候加了–hard，导致之前 feature-2 到 feature-6 的所有代码全部弄丢了，现在 git log 的显示如下：现在 feature-2 到 feature-6 的代码没了。。。。。然鹅还没完，在这个基础上新添加了一个 commit 提交，信息叫 feature-7，如下图：现在 feature-2 到 feature-6 全没了，还多了一个 feature-7请问 如何把丢失的代码 feature-2 到 feature-6 全部恢复回来，并且 feature-7 的代码也要保留用git reflog和git cherry-pick就能解决在终端里输入：1git reflog然后就会展示出所有你之前git操作，你以前所有的操作都被git记录了下来，如下图：这时候要记好两个值：4c97ff3和cd52afc，他们分别是feature-7和feature-6的hash码。然后执行回滚，回到feature-6上：1git reset --hard cd52afc现在我们回到了feature-6上，如下图：我们回到了feature-6上，但是feature-7没了，如何加上来呢？这个时候就用上了git cherry-pick，刚刚我们知道了feature-7的hash码为4c97ff3，操作如下：1git cherry-pick 4c97ff3回车之后，你的feature-7的代码就回来了。期间可能会有一些冲突，按照提示解决就好。最后的结果如下图：feature-1 到 feature-7的代码就合并到了一起，以前的代码也都回来了。原文出自前端时光机]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用coding-pages时出现静态文件丢失]]></title>
    <url>%2Fposts%2F372cd070.html</url>
    <content type="text"><![CDATA[出现这种情况，发现静态资源都加载不到，后来网上搜索了半天，才发现原来你要打算用 coding 的 pages 服务部署你的博客的话，你创建项目的名字必须和用户名保持一致，不能自己随便自定义。我重新创建了一个和用户名一致的项目，部署到他的 pages 服务，访问正常]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
</search>
